{"version":3,"sources":["images/borat.png","images/gwbush.png","images/vs.png","components/WelcomeScreen.jsx","components/Projectile.jsx","components/MovingItem.jsx","components/Enemy.jsx","components/GameGrid.jsx","components/LifeCounter.jsx","components/KillCounter.jsx","components/WaveCounter.jsx","images/borat-nice.png","images/youlose.png","components/Constants.js","components/EndScreen.jsx","components/App.js","components/Store.js","components/AppReducer.jsx","index.js"],"names":["WelcomeScreen","props","dispatch","useDispatch","className","src","boratImage","vsImage","gwbushImage","name","onClick","e","type","payload","Projectile","currentProjectile","useSelector","state","projectiles","find","projectile","id","inputRef","useRef","useEffect","dead","current","y","setTimeout","parseInt","toString","style","top","left","x","ref","MovingItem","focus","storePosition","boratPosition","useState","setPreviousKeys","setFiring","Date","now","timeOfLastFire","setTimeOfLastFire","tabIndex","onKeyDown","key","preventDefault","onKeyUp","Enemy","storeProjectiles","waveNumber","waveCount","currentEnemy","enemies","isItDead","length","slice","map","Math","abs","GameGrid","reactElementArrayEnemies","enemy","console","log","reactElementArrayProjectiles","LifeCounter","storeLifeCount","lifeCount","class","KillCounter","storeKillCount","killCount","WaveCounter","storeWaveCount","initialState","GWBushPosition","gameStarted","EndScreen","youLoseImage","App","enemyCount","nbOfWaves","store","createStore","action","produce","draft","position","push","splice","getState","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f692ecae.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/borat.b6c7fdb6.png\";","export default __webpack_public_path__ + \"static/media/gwbush.b1a35170.png\";","export default __webpack_public_path__ + \"static/media/vs.93f0f250.png\";","import { useDispatch } from 'react-redux'\r\nimport '../styles/welcomeScreen.scss'\r\nimport boratImage from '../images/borat.png'\r\nimport gwbushImage from '../images/gwbush.png'\r\nimport vsImage from '../images/vs.png'\r\n\r\nconst WelcomeScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n    return <div className = \"welcome-screen\">\r\n        <img  className = \"welcome-screen__logo\" src = {boratImage}/>\r\n        <img  className = \"welcome-screen__logo\" src = {vsImage}/>\r\n        <img  className = \"welcome-screen__logo\" src = {gwbushImage}/>\r\n        <span className = \"welcome-screen__text\">Earth is under attack! A swarm of space Georges W. Bushes is trying to take over our planet! You are Borat and you were given a spaceship equiped with space rockets, made in Kazakhstan of course, the greatest nation in the world</span>\r\n        <span className = \"welcome-screen__text\">To move, use keyboard arrows <button className = \"welcome-screen__button-demo\">{'<'}</button> and <button className = \"welcome-screen__button-demo\">{'>'}</button></span>\r\n        <span className = \"welcome-screen__text\">To shoot, use the <button className = \"welcome-screen__button-demo\">{'SPACE'}</button> key!</span>\r\n        <span className = \"welcome-screen__text\">If you can save us all, it's nice. I liiiiiike!</span>\r\n        <button name=\"button\" className = \"welcome-screen__button-start\" onClick = {(e) => {\r\n            dispatch({ type: 'gameStarted/setValue', payload: true})\r\n        }}>SAVE THE EARTH!</button>\r\n    </div>\r\n}\r\n\r\nexport default WelcomeScreen","import '../styles/projectile.scss'\r\n\r\n//Importing useSelector hook to be able to \"listen\" to the Redux store\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEffect } from 'react'\r\nimport {useState} from 'react'\r\nimport {useRef} from 'react'\r\n\r\n\r\nconst Projectile= (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    const storeProjectile = state => state.projectiles.find(projectile => projectile.id == props.id);\r\n    const currentProjectile = useSelector(storeProjectile)\r\n\r\n    //Creating the reference we'll assign to the square.\r\n    const inputRef = useRef();\r\n\r\n    useEffect(() => {\r\n\r\n        if (currentProjectile.dead === true) {\r\n            inputRef.current.className = \"projectile projectile--dead\"\r\n\r\n        } else {\r\n            inputRef.current.className = \"projectile\"\r\n            if (currentProjectile.y >= -10) {\r\n                setTimeout(() => {\r\n                  dispatch({ type: 'projectile/elevate', payload: {'position': (parseInt(currentProjectile.y) - 10).toString(), 'id': props.id }})\r\n              }\r\n              , 50)\r\n              }\r\n            else {\r\n                dispatch({ type: 'projectile/setDead', payload: {'dead': true, 'id': currentProjectile.id }})\r\n            }    \r\n        }\r\n        \r\n    })\r\n      return (\r\n            <div className = \"projectile\" style = {{top:currentProjectile.y + \"vh\", left: currentProjectile.x + \"vh\"}} ref={inputRef}></div> \r\n      )\r\n    }\r\n\r\n   \r\nexport default Projectile","import '../styles/fancySquare.scss'\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useRef, useEffect, useState } from 'react';\r\nimport Projectile from './Projectile';\r\n\r\nconst MovingItem = (props) => {\r\n\r\n    const dispatch = useDispatch()\r\n    \r\n    //Creating the reference we'll assign to the Saucer\r\n    const inputRef = useRef();\r\n\r\n    //Adding behavior on render: give focus to the Saucer\r\n    useEffect(() => {\r\n        inputRef.current.focus();\r\n      })\r\n\r\n    //Setting Hook on global state position for this object\r\n    const currentPosition = state => state.boratPosition;\r\n    const storePosition = useSelector(currentPosition)\r\n\r\n    //Adding Hook for going left and going right. This is to allow our hero to move while shooting\r\n    const [previousKeys, setPreviousKeys] = useState([])\r\n    const [firing, setFiring] = useState(false)\r\n    const [timeOfLastFire , setTimeOfLastFire] = useState(Date.now())\r\n\r\n    //handling position changing scenarios in a function\r\n\r\n    const moveAround = (key) => {\r\n        \r\n        if (key === \"ArrowLeft\") {\r\n            if (storePosition.x >= 2) {\r\n                setPreviousKeys([])\r\n                 dispatch({type: 'borat/putXPosition', payload: parseInt(storePosition.x)-5}\r\n                 \r\n                )}\r\n        } else if (key === \"ArrowRight\" ) {\r\n            if (storePosition.x <=92) {\r\n                setPreviousKeys([])\r\n                dispatch({type: 'borat/putXPosition', payload: parseInt(storePosition.x)+5}\r\n                )}\r\n            }\r\n            if (key === \" \" && (Date.now() - timeOfLastFire) > 200) {\r\n                dispatch({ type: 'projectile/spawn', payload: parseInt(storePosition.x)})\r\n                setFiring(false);\r\n                setTimeOfLastFire(Date.now())\r\n            }\r\n        }\r\n\r\n        \r\n\r\n    //Returning the Borat Saucer  \r\n    return <div tabIndex = '0' className = \"fancy-square\" style = {{top:storePosition.y + \"vh\", left: storePosition.x + \"vh\"}} onKeyDown = { e => {\r\n            e.preventDefault();\r\n            moveAround(e.key);\r\n\r\n                \r\n                           \r\n            \r\n    }} onKeyUp = { e => {\r\n        e.preventDefault();\r\n            if (e.key === \" \") {\r\n                    setFiring(false); \r\n                }       \r\n        \r\n    }}\r\n ref={inputRef}></div>\r\n}\r\nexport default MovingItem","import '../styles/gwBush.scss'\r\n\r\n//Importing useSelector hook to be able to \"listen\" to the Redux store\r\nimport { useSelector, useDispatch } from \"react-redux\"\r\nimport { useEffect } from 'react'\r\nimport {useState} from 'react'\r\nimport {useRef} from 'react'\r\n\r\n\r\nconst Enemy = (props) => {\r\n\r\n    const dispatch = useDispatch();\r\n\r\n    \r\n\r\n\r\n    //Setting Hook on global state position for the Projectiles\r\n    const currentProjectilesPositions = state => state.projectiles;\r\n    const storeProjectiles = useSelector(currentProjectilesPositions)\r\n\r\n    const storeWaveNumber = state => state.waveCount;\r\n    const waveNumber = useSelector(storeWaveNumber)\r\n\r\n    const storeEnemy = state => state.enemies[waveNumber][props.id];\r\n    const currentEnemy = useSelector(storeEnemy)\r\n\r\n    //Redux Hook\r\n    const storeIsItDead = state => state.enemies[waveNumber][props.id].dead;\r\n    const isItDead = useSelector(storeIsItDead)\r\n\r\n\r\n    //Creating the reference we'll assign to the square.\r\n    const inputRef = useRef();\r\n\r\n    useEffect(() => {\r\n        let timeOutReference = null;\r\n        if (isItDead === true) {\r\n            inputRef.current.className = \"gwbush gwbush--dead\"\r\n            /*dispatch({ type: 'enemy/descend', payload: {'position': -10, 'id': props.id }})*/\r\n        } else {\r\n        //Checking if the coordinates match to define the right styling\r\n        if (storeProjectiles.length > 0) {\r\n        storeProjectiles.slice(-10).map(projectile => {\r\n            if (projectile.dead === false && (Math.abs(projectile.x - currentEnemy.x) <=5) && (Math.abs(projectile.y - currentEnemy.y)<=5)) {\r\n                dispatch({ type: 'killCount/add', payload: 1})\r\n                dispatch({ type: 'projectile/setDead', payload: {'dead': true, 'id': projectile.id }})\r\n                dispatch({ type: 'enemy/setDead', payload: {'waveNumber': waveNumber, 'dead': true, 'id': props.id }})\r\n                /*setHaveBeenKilled(true)    */        \r\n            } else {\r\n                inputRef.current.className = currentEnemy.style\r\n            }\r\n        })\r\n        }\r\n        \r\n        if (currentEnemy.y < 100) {\r\n            timeOutReference =  setTimeout(() => \r\n            dispatch({ type: 'enemy/descend', payload: \r\n            {'waveNumber': waveNumber, 'position': (parseInt(currentEnemy.y)+1).toString(), 'id': props.id }})\r\n            , 100)\r\n        } else {\r\n            dispatch({ type: 'lifeCount/decrease', payload: true})\r\n            dispatch({ type: 'killCount/add', payload: 1})\r\n            dispatch({ type: 'enemy/setDead', payload: {'waveNumber': waveNumber, 'dead': true, 'id': props.id }})\r\n\r\n        }\r\n      }\r\n    })\r\n\r\n      return (\r\n            <div className = {currentEnemy.style} style = {{top:currentEnemy.y + \"vh\", left: currentEnemy.x + \"vh\"}} ref={inputRef}></div> \r\n      )\r\n    }\r\n\r\n   \r\nexport default Enemy","import MovingItem from './MovingItem';\r\nimport Enemy from './Enemy';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Projectile from './Projectile';\r\n\r\n\r\nconst GameGrid = () => {\r\n\r\n    const storeWaveNumber = state => state.waveCount;\r\n    const waveNumber = useSelector(storeWaveNumber)\r\n\r\n    const storeEnemies = state => state.enemies;\r\n    const enemies = useSelector(storeEnemies)\r\n\r\n    const storeProjectiles = state => state.projectiles;\r\n    const projectiles = useSelector(storeProjectiles)\r\n\r\n    const reactElementArrayEnemies = enemies[waveNumber].map(enemy => {\r\n    return <Enemy id = {enemy.id}/>\r\n    })\r\n\r\n    console.log(projectiles)\r\n\r\n    let reactElementArrayProjectiles = [];\r\n\r\n    if (projectiles.length > 0) {\r\n        reactElementArrayProjectiles = projectiles.map(projectile => {\r\n            if (projectile.dead === false) {\r\n            return <Projectile id = {projectile.id}/>\r\n            }\r\n          })\r\n\r\n    }    \r\n\r\n    return(\r\n          <div className = \"grid\" >\r\n            <MovingItem/>\r\n                {reactElementArrayEnemies}\r\n                {reactElementArrayProjectiles}\r\n          </div>\r\n\r\n      )\r\n}\r\nexport default GameGrid","import '../styles/lifeCounter.scss'\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst LifeCounter = () => {\r\n\r\n        //Setting Hook on life counter\r\n        const lifeCount = state => state.lifeCount;\r\n        const storeLifeCount = useSelector(lifeCount)\r\n\r\n    \r\n    if (storeLifeCount > 0) {\r\n        return <div className = \"life-counter\">\r\n            <i class=\"fas fa-heart life-counter__icon\"></i>\r\n            <div className = \"life-counter__value\">{storeLifeCount}</div>\r\n        </div>\r\n    } else {\r\n        return <div className = \"life-counter\">Game Over Man!</div>\r\n    }\r\n}\r\nexport default LifeCounter","import '../styles/lifeCounter.scss'\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst KillCounter = () => {\r\n\r\n        //Setting Hook on life counter\r\n        const killCount = state => state.killCount;\r\n        const storeKillCount = useSelector(killCount)\r\n\r\n    \r\n    if (storeKillCount < 10) {\r\n        return <div className = \"life-counter\">\r\n            <i class=\"fas fa-skull life-counter__icon\"></i>\r\n            <div className = \"life-counter__value\">{storeKillCount}</div>\r\n        </div>\r\n    } else {\r\n        return <div className = \"life-counter\">They are all dead!</div>\r\n    }\r\n}\r\nexport default KillCounter","import '../styles/lifeCounter.scss'\r\nimport { useSelector } from \"react-redux\"\r\n\r\nconst WaveCounter = () => {\r\n\r\n        //Setting Hook on life counter\r\n        const waveCount = state => state.waveCount;\r\n        const storeWaveCount = useSelector(waveCount)\r\n\r\n    \r\n    if (storeWaveCount < 10) {\r\n        return <div className = \"life-counter\">\r\n            <i class=\"fas fa-skull life-counter__icon\"></i>\r\n            <div className = \"life-counter__value\">{storeWaveCount}</div>\r\n        </div>\r\n    } else {\r\n        return <div className = \"life-counter\">They are all dead!</div>\r\n    }\r\n}\r\nexport default WaveCounter","export default __webpack_public_path__ + \"static/media/borat-nice.2dcc8014.png\";","export default __webpack_public_path__ + \"static/media/youlose.65e4e62e.png\";","export const initialState = {\r\n    boratPosition: {'x':'50', 'y':'90'},\r\n    GWBushPosition: {'x':'50', 'y':'50'},\r\n    enemies : [[{'id': 0, 'x': '5', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 1,'x': '25', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 2, 'x': '45', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 3,'x': '65', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 4,'x': '85', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 5, 'x': '5', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 6,'x': '25', 'y':'20', \"dead\": false, \"style\": 'gwbush'},\r\n    {'id': 7, 'x': '45', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 8,'x': '65', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 9,'x': '85', 'y':'20', \"dead\": false, \"style\": \"gwbush gwbush--red\"}],\r\n    [{'id': 0, 'x': '5', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 1,'x': '25', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 2, 'x': '45', 'y':'10', \"dead\": false, \"style\": \"gwbush gwbush--red\"},\r\n    {'id': 3,'x': '65', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 4,'x': '85', 'y':'10', \"dead\": false, \"style\": \"gwbush gwbush--red\"},\r\n    {'id': 5, 'x': '5', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 6,'x': '25', 'y':'20', \"dead\": false, \"style\": \"gwbush gwbush--red\"},\r\n    {'id': 7, 'x': '45', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 8,'x': '65', 'y':'20', \"dead\": false, \"style\": \"gwbush gwbush--red\"},\r\n    {'id': 9,'x': '85', 'y':'20', \"dead\": false, \"style\": \"gwbush\"}],\r\n    [{'id': 0, 'x': '5', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 1,'x': '25', 'y':'10', \"dead\": false, \"style\": \"gwbush gwbush--red\"},\r\n    {'id': 2, 'x': '45', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 3,'x': '65', 'y':'10', \"dead\": false, \"style\": \"gwbush gwbush--red\"},\r\n    {'id': 4,'x': '85', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 5, 'x': '5', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 6,'x': '25', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 7, 'x': '45', 'y':'20', \"dead\": false, \"style\": \"gwbush gwbush--red\"},\r\n    {'id': 8,'x': '65', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 9,'x': '85', 'y':'20', \"dead\": false, \"style\": \"gwbush\"}],\r\n    [{'id': 0, 'x': '5', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 1,'x': '25', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 2, 'x': '45', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 3,'x': '65', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 4,'x': '85', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 5, 'x': '5', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 6,'x': '25', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 7, 'x': '45', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 8,'x': '65', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 9,'x': '85', 'y':'20', \"dead\": false, \"style\": \"gwbush\"}],\r\n    [{'id': 0, 'x': '5', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 1,'x': '25', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 2, 'x': '45', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 3,'x': '65', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 4,'x': '85', 'y':'10', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 5, 'x': '5', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 6,'x': '25', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 7, 'x': '45', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 8,'x': '65', 'y':'20', \"dead\": false, \"style\": \"gwbush\"},\r\n    {'id': 9,'x': '85', 'y':'20', \"dead\": false}]],\r\n    projectiles :[],\r\n    lifeCount: 3,\r\n    killCount: 0,\r\n    waveCount: 0,\r\n    gameStarted: false\r\n}\r\n","import { useDispatch, useSelector } from 'react-redux'\r\nimport '../styles/welcomeScreen.scss'\r\nimport boratImage from '../images/borat-nice.png'\r\nimport youLoseImage from '../images/youlose.png'\r\nimport { initialState } from './Constants'\r\n\r\n\r\nconst EndScreen = (props) => {\r\n    const dispatch = useDispatch()\r\n\r\n    const storeLifeCount = state => state.lifeCount;\r\n    const lifeCount = useSelector(storeLifeCount);\r\n\r\n    if (lifeCount > 0) {\r\n        return <div className = \"welcome-screen\">\r\n            <img  className = \"welcome-screen__logo welcome-screen__logo--big\" src = {boratImage}/>\r\n            <span className = \"welcome-screen__text\">WOW Dude. You saved the earth. Now humans can kill each other in peace and harmony</span>\r\n\r\n        </div>\r\n    }\r\n    else {\r\n        return <div className = \"welcome-screen\">\r\n            <img  className = \"welcome-screen__logo welcome-screen__logo--big\" src = {youLoseImage}/>\r\n            <span className = \"welcome-screen__text\">WOW Dude. You suck. Everyone's dead now. Children and everything. Also, it's your fault</span>\r\n        </div>\r\n    }\r\n}\r\n\r\nexport default EndScreen","import React, { useState } from 'react';\nimport '../styles/App.css';\nimport '../styles/base.scss';\nimport { useSelector, useDispatch } from 'react-redux';\nimport WelcomeScreen from './WelcomeScreen';\nimport GameGrid from './GameGrid';\nimport LifeCounter from './LifeCounter';\nimport KillCounter from './KillCounter';\nimport WaveCounter from './WaveCounter';\nimport EndScreen from './EndScreen';\n\nfunction App() {\n\n        const storeGameStarted = state => state.gameStarted;\n        const gameStarted = useSelector(storeGameStarted)\n\n        const storeKillCount = state => state.killCount;\n        const killCount = useSelector(storeKillCount)\n\n        const storeLifeCount = state => state.lifeCount;\n        const lifeCount = useSelector(storeLifeCount)\n\n        const storeWaveCount = state => state.waveCount;\n        const waveCount = useSelector(storeWaveCount)\n\n        const storeEnemyCount = state => state.enemies[waveCount].length;\n        const enemyCount = useSelector(storeEnemyCount)\n\n        const storeNbOfWaves = state => state.enemies.length;\n        const nbOfWaves = useSelector(storeNbOfWaves)\n\n        const dispatch = useDispatch()\n\n        if (gameStarted === true) {\n          if (killCount === enemyCount) {\n            /*dispatch({ type: 'gameStarted/setValue', payload: false})*/\n            if (waveCount != (nbOfWaves - 1)) {\n            dispatch({ type: 'wave/add', payload: 1 })  \n            dispatch({ type: 'killCount/add', payload: -10})\n            }\n          }\n\n          if (waveCount != nbOfWaves -1 && lifeCount > 0 ) {\n          return(\n            <div className = \"screen\">\n              <div className = \"counters\">\n              <LifeCounter/>\n              <KillCounter/>\n              <WaveCounter/>\n            </div>\n            <GameGrid/>\n            </div>\n          )\n          } else {\n            return(\n              <div className= \"screen\">\n                <EndScreen/>\n              </div>\n            )\n          }\n        }\n        else {\n          return(\n            <div className= \"screen\">\n              <WelcomeScreen/>\n            </div>\n          )\n        }\n}\n\nexport default App;\n","import { createStore } from 'redux'\r\nimport AppReducer from \"./AppReducer\"\r\n\r\n//Creating the store\r\nlet store = createStore(AppReducer);\r\n//chacking initial value\r\nconsole.log('Initial state: ', store.getState());\r\n\r\nexport default store","import update from 'immutability-helper';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport produce from 'immer';\r\nimport { enemyWaves } from './Constants';\r\nimport { initialState } from './Constants';\r\n\r\n   // Use the initialState as a default value\r\n   export default function AppReducer(state = initialState, action) {\r\n     // The reducer normally looks at the action type field to decide what happens  \r\n     switch (action.type) {  \r\n         case 'borat/putXPosition' : {\r\n           return {\r\n                ...state,\r\n                    boratPosition: {'x':action.payload, 'y': state.boratPosition.y}\r\n            }\r\n        }\r\n        case 'borat/putYPosition' : {\r\n          return {\r\n               ...state,\r\n                   boratPosition: {'x':state.boratPosition.x, 'y': action.payload}\r\n           }\r\n       }\r\n       case 'lifeCount/decrease' : {\r\n        return {\r\n             ...state,\r\n                 lifeCount: state.lifeCount -1\r\n         }\r\n     }\r\n     case 'killCount/add' : {\r\n        return {\r\n             ...state,\r\n                 killCount: state.killCount + action.payload\r\n         }\r\n     }\r\n     case 'enemy/descend' : {\r\n        return produce(state, draft => {\r\n            // Modify the draft however you want\r\n            draft.enemies[action.payload.waveNumber][action.payload.id].y = action.payload.position;\r\n        })   \r\n    }\r\n    case 'projectile/elevate' : {\r\n        return produce(state, draft => {\r\n            // Modify the draft however you want\r\n            draft.projectiles[action.payload.id].y = action.payload.position;\r\n        })   \r\n    }\r\n    case 'projectile/spawn' : {\r\n        return produce(state, draft => {\r\n            // Modify the draft however you want\r\n            console.log(draft.projectiles.length)\r\n            draft.projectiles.push({'id': draft.projectiles.length, 'x' : action.payload.toString(), 'y' : \"90\", 'dead' : false })\r\n        })\r\n    }\r\n    case 'enemy/setDead' : {\r\n        return produce(state, draft => {\r\n            // Modify the draft however you want\r\n            draft.enemies[action.payload.waveNumber][action.payload.id].dead = action.payload.dead;\r\n        })   \r\n    }\r\n    case 'projectile/setDead' : {\r\n        return produce(state, draft => {\r\n            // Modify the draft however you want\r\n            draft.projectiles[action.payload.id].dead = action.payload.dead;\r\n        })   \r\n    }\r\n    case 'projectile/remove' : {\r\n        return produce(state, draft => {\r\n            // Modify the draft however you want\r\n            draft.projectiles = draft.projectiles.splice(action.payload, 1);\r\n\r\n        })   \r\n    }\r\n    case 'gameStarted/setValue' : {\r\n        return produce(state, draft => {\r\n            // Modify the draft however you want\r\n            draft.gameStarted = action.payload\r\n\r\n        })   \r\n    }\r\n    case 'wave/add' : {\r\n        return produce(state, draft => {\r\n            // Modify the draft however you want\r\n            draft.waveCount = draft.waveCount + action.payload\r\n\r\n        })   \r\n    }\r\n\r\n       default:      \r\n       // If this reducer doesn't recognize the action type, or doesn't      \r\n       // care about this specific action, return the existing state unchanged \r\n       return state \r\n   }}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport store from './components/Store';\nimport { Provider } from 'react-redux';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}